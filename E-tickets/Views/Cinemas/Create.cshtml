@model Cinema

@{
    ViewData["Title"] = "Add a new Cinema";
}

<div class="row text">
    <div class="col-md-8 offset-2">
        <h1>Add a new actor</h1>

        <div class="row">

            <div class="col-md-8 offset-2">


                <form asp-action="Create">


                    <div asp-validation-summary="ModelOnly" class="text-danger">

                    </div>
                    @* 🔍 Debug: Show exact ModelState errors *@
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <ul class="text-danger">
                            @foreach (var entry in ViewData.ModelState)
                            {
                                foreach (var error in entry.Value.Errors)
                                {
                                    <li>@entry.Key: @error.ErrorMessage</li>
                                }
                            }
                        </ul>
                    }



                    <div class="form-group text-center">
                        <img id="CinemaLogoPreview" class="border-info rounded-circle" style="max-width: 150px" />
                    </div>


                    <div class="form-group">
                        <label asp-for="Logo" class="control-label"></label>
                        <input asp-for="Logo" class="form-control" />
                        <span asp-validation-for="Logo" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <input asp-for="Description" class="form-control" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-outline-success float-right" />
                        <a class="btn btn-outline-secondary" asp-action="Index">Show All</a>
                    </div>

                </form>

            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        $(document).ready(function () {
            var output = document.getElementById('CinemaLogoPreview');
            output.src = $("#Logo").val();
        })


        $("#Logo").on("change", function () {
            var output = document.getElementById('CinemaLogoPreview');
            output.src = $(this).val();
        })
    </script>
}

@* 
@section Scripts {
    <script>
        // Wait for the HTML document to be fully loaded and parsed
        document.addEventListener('DOMContentLoaded', function () {

            // Get references to the input field and the preview image elements
            const pictureInput = document.getElementById('Logo');
            const picturePreview = document.getElementById('ProfilePicturePreview');

            // Check if both elements were found before proceeding
            if (pictureInput && picturePreview) {

                // --- Initial Setup (equivalent to document.ready part) ---
                // Set the initial source of the preview image from the input's current value
                picturePreview.src = pictureInput.value;

                // --- Event Listener (equivalent to .on("change") part) ---
                // Add an event listener to the input field that triggers when its value changes
                pictureInput.addEventListener('change', function () {
                    // When the input changes, update the preview image's source
                    // 'this' inside this function refers to the pictureInput element
                    picturePreview.src = this.value;
                });

            } else {
                // Log an error if one or both elements couldn't be found
                if (!pictureInput) {
                    console.error('Error: Element with ID "Logo" not found.');
                }
                if (!picturePreview) {
                    console.error('Error: Element with ID "ProfilePicturePreview" not found.');
                }
            }
        });
    </script>
} *@